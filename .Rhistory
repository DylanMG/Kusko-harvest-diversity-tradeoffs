bh_sim <- sr_sim(ny = 50,
phi = 0,
rec_sd = 0.5,
mat = c(0.1, 0.4, 0.4, 0.1),
alpha = exp(ricker_a),
beta = (ricker_b * -1),
U = 0.4,
OU = 0.1,
Spw = ricker_a/(ricker_b*-1),
Rec = rep(ricker_a/(ricker_b*-1),8),
SR_rel = "Beverton-Holt",
BH.alpha.CV = 0.4,
period = 6,
alpha.scalar = 1)
spawners <- bh_sim$S[10:50]
recruits <- bh_sim$R[10:50]
ricker_fit <- lm(log(recruits/spawners)~spawners)
ricker_para_dev[i,1] <- ricker_fit$coefficients[1]/ricker_a
ricker_para_dev[i,2] <- ricker_fit$coefficients[2]/ricker_b
}
par(mfrow=c(1,2),bty="o", mar=c(4,4,1,1))#set dimensions to plots
hist( ricker_para_dev[,2])
hist( ricker_para_dev[,1])
ricker_para_dev <- matrix(NA,100,2)
for(i in 1:100){
bh_sim <- sr_sim(ny = 50,
phi = 0,
rec_sd = 0.5,
mat = c(0.1, 0.4, 0.4, 0.1),
alpha = exp(ricker_a),
beta = (ricker_b * -1),
U = 0.4,
OU = 0.1,
Spw = ricker_a/(ricker_b*-1),
Rec = rep(ricker_a/(ricker_b*-1),8),
SR_rel = "Beverton-Holt",
BH.alpha.CV = 0.4,
period = 6,
alpha.scalar = 0.7)
spawners <- bh_sim$S[10:50]
recruits <- bh_sim$R[10:50]
ricker_fit <- lm(log(recruits/spawners)~spawners)
ricker_para_dev[i,1] <- ricker_fit$coefficients[1]/ricker_a
ricker_para_dev[i,2] <- ricker_fit$coefficients[2]/ricker_b
}
par(mfrow=c(1,2),bty="o", mar=c(4,4,1,1))#set dimensions to plots
hist( ricker_para_dev[,2])
hist( ricker_para_dev[,1])
ricker_para_dev <- matrix(NA,100,2)
for(i in 1:100){
bh_sim <- sr_sim(ny = 50,
phi = 0,
rec_sd = 0.5,
mat = c(0.1, 0.4, 0.4, 0.1),
alpha = exp(ricker_a),
beta = (ricker_b * -1),
U = 0.4,
OU = 0.1,
Spw = ricker_a/(ricker_b*-1),
Rec = rep(ricker_a/(ricker_b*-1),8),
SR_rel = "Beverton-Holt",
BH.alpha.CV = 0.4,
period = 6,
alpha.scalar = 1.5)
spawners <- bh_sim$S[10:50]
recruits <- bh_sim$R[10:50]
ricker_fit <- lm(log(recruits/spawners)~spawners)
ricker_para_dev[i,1] <- ricker_fit$coefficients[1]/ricker_a
ricker_para_dev[i,2] <- ricker_fit$coefficients[2]/ricker_b
}
par(mfrow=c(1,2),bty="o", mar=c(4,4,1,1))#set dimensions to plots
hist( ricker_para_dev[,2])
hist( ricker_para_dev[,1])
ricker_para_dev <- matrix(NA,100,2)
for(i in 1:100){
bh_sim <- sr_sim(ny = 50,
phi = 0,
rec_sd = 0.5,
mat = c(0.1, 0.4, 0.4, 0.1),
alpha = exp(ricker_a),
beta = (ricker_b * -1),
U = 0.4,
OU = 0.1,
Spw = ricker_a/(ricker_b*-1),
Rec = rep(ricker_a/(ricker_b*-1),8),
SR_rel = "Beverton-Holt",
BH.alpha.CV = 0.4,
period = 12,
alpha.scalar = 1.5)
spawners <- bh_sim$S[10:50]
recruits <- bh_sim$R[10:50]
ricker_fit <- lm(log(recruits/spawners)~spawners)
ricker_para_dev[i,1] <- ricker_fit$coefficients[1]/ricker_a
ricker_para_dev[i,2] <- ricker_fit$coefficients[2]/ricker_b
}
par(mfrow=c(1,2),bty="o", mar=c(4,4,1,1))#set dimensions to plots
hist( ricker_para_dev[,2])
hist( ricker_para_dev[,1])
ricker_para_dev <- matrix(NA,100,2)
for(i in 1:100){
bh_sim <- sr_sim(ny = 50,
phi = 0,
rec_sd = 0.5,
mat = c(0.1, 0.4, 0.4, 0.1),
alpha = exp(ricker_a),
beta = (ricker_b * -1),
U = 0.4,
OU = 0.1,
Spw = ricker_a/(ricker_b*-1),
Rec = rep(ricker_a/(ricker_b*-1),8),
SR_rel = "Beverton-Holt",
BH.alpha.CV = 0.4,
period = 6,
alpha.scalar = 1.5)
spawners <- bh_sim$S[10:50]
recruits <- bh_sim$R[10:50]
ricker_fit <- lm(log(recruits/spawners)~spawners)
ricker_para_dev[i,1] <- ricker_fit$coefficients[1]/ricker_a
ricker_para_dev[i,2] <- ricker_fit$coefficients[2]/ricker_b
}
par(mfrow=c(1,2),bty="o", mar=c(4,4,1,1))#set dimensions to plots
hist( ricker_para_dev[,2])
hist( ricker_para_dev[,1])
ricker_para_dev <- matrix(NA,100,2)
for(i in 1:100){
bh_sim <- sr_sim(ny = 50,
phi = 0,
rec_sd = 0.5,
mat = c(0.1, 0.4, 0.4, 0.1),
alpha = exp(ricker_a),
beta = (ricker_b * -1),
U = 0.4,
OU = 0.1,
Spw = ricker_a/(ricker_b*-1),
Rec = rep(ricker_a/(ricker_b*-1),8),
SR_rel = "Beverton-Holt",
BH.alpha.CV = 0.4,
period = 3,
alpha.scalar = 1.5)
spawners <- bh_sim$S[10:50]
recruits <- bh_sim$R[10:50]
ricker_fit <- lm(log(recruits/spawners)~spawners)
ricker_para_dev[i,1] <- ricker_fit$coefficients[1]/ricker_a
ricker_para_dev[i,2] <- ricker_fit$coefficients[2]/ricker_b
}
par(mfrow=c(1,2),bty="o", mar=c(4,4,1,1))#set dimensions to plots
hist( ricker_para_dev[,2])
hist( ricker_para_dev[,1])
source("load.R")
# simulate a spawner-recruitment relationship assuming BH_cyl based on a draw from the posteriors of the model fit (and median alpha and beta)
draw <- sample(10000,1)
#draw <-  6606
sim_1 <- process(ny = 50,
vcov.matrix = process.iteration(samps[draw,])$Sigma_R,
phi = process.iteration(samps[draw,])$phi,
mat = process.iteration(samps[draw,])$pis,
alpha = colMedians(samps)[1:13],
beta = colMedians(samps)[14:26],
sub = 10000,
com = 0,
egfloor = 10000,
pm.yr = 0,
for.error = 0.1,
OU = 0,
Rec = process.iteration(samps[draw,])$R,
Spw = process.iteration(samps[draw,])$S,
lst.resid = process.iteration(samps[draw,])$last_resid,
SR_rel = "Beverton-Holt",
BH.alpha.CV = 0.4,
period = 12,
dir.SR = "F",
SR_devs <- array(1,dim=c(ny,2,13)),
expan = 1)
spawners <- rowSums(sim_1$S)[10:50]
recruits <- rowSums(sim_1$R)[10:50]
BH_prod_col <- viridis(6)
time_prod_col <- c(BH_prod_col[2],BH_prod_col[2],
rep(c(BH_prod_col,rev(BH_prod_col)),4))
ricker_fit <- lm(log(recruits/spawners)~spawners)
ricker_a <- ricker_fit$coefficients[1]
ricker_b <- ricker_fit$coefficients[2]
period <- seq(1,21)
period
alpha.scalar <- seq(0.2,2)
alpha.scalar
alpha.scalar <- seq(0.2,2,length.out=21)
alpha.scalar
ricker_para_dev <- matrix(NA,2,21,21,100)
ricker_para_dev <- array(NA,dim=c(2,21,21,100))
period <- seq(1,21)
alpha.scalar <- seq(0.2,2,length.out=21)
BH.alpha.CV <- seq(0,1,length.out=21)
for(k in 1:21){
for(j in 1:21){
for(i in 1:100){
bh_sim <- sr_sim(ny = 50,
phi = 0,
rec_sd = 0.5,
mat = c(0.1, 0.4, 0.4, 0.1),
alpha = exp(ricker_a),
beta = (ricker_b * -1),
U = 0.4,
OU = 0.1,
Spw = ricker_a/(ricker_b*-1),
Rec = rep(ricker_a/(ricker_b*-1),8),
SR_rel = "Beverton-Holt",
BH.alpha.CV = 0.4,
period = period[k],
alpha.scalar = period[j])
spawners <- bh_sim$S[10:50]
recruits <- bh_sim$R[10:50]
ricker_fit <- lm(log(recruits/spawners)~spawners)
ricker_para_dev[1, k, j] <- ricker_fit$coefficients[1]/ricker_a
ricker_para_dev[2, k, j] <- ricker_fit$coefficients[2]/ricker_b
}
}
}
########################################################################################
# functions.R
#
# Functions for closed loop simulations and assocaited analyses
# July 5, 2019
# Author: B. Connors (DFO) and B. Staton (CRITFC)
#
########################################################################################
#------------------------------------------------------------------------------#
# Single-stock simulation function with alternative structural forms
#------------------------------------------------------------------------------#
# ny <- the number of years
# phi <- the expected correlation through time
# rec_sd <- process error in SD units
# mat <- stock-specific maturation schedules
# alpha <- sub-stock productivity (not in log space)
# beta <- sub-stock density depedence
# U <- exploitation rate
# OU <- outcome uncertainty (CV)
# Spw <- spawner abundance in year 1:4
# Rec <- recruitment from years 1:4
# SR_rel <- structural form of the SR relationship ("Ricker" or "Beverton-Holt")
# BH.alpha.CV <- magnitude (amplitude) of environmental forcing on alpha if SR_rel = "Beverton-Holt"
# period <- period of enviro forcing cycle if SR_rel = "Beverton-Holt"
# alpha.scalar <- scalar for BH alpha
sr_sim = function(ny,phi,rec_sd, mat,alpha,beta,U,OU,Spw,Rec,SR_rel,BH.alpha.CV,period,alpha.scalar){
ns <- 1
if(SR_rel == "Beverton-Holt"){alpha <- alpha* alpha.scalar}
# create vectors of time varying alpha
if (SR_rel == "Beverton-Holt"){
beta.tim <- (alpha/beta)*exp(-1)
alpha.time <- matrix(NA,ny,length(alpha))
for (t in 1:ny){
alpha.time[t,] <- sin(2*pi*(t/period))*((alpha + (alpha * BH.alpha.CV)) - alpha) + alpha
}
}
#Create recruitment deviations
epi = rnorm(ny, 0, rec_sd)
#Build time series of Spawners (S), abundance of returning spawners pre-harvest
# (N), and the component of the residual that is correlated throught time (v)
R = t(matrix(0,ns,ny));  R[1:8,] <- Rec
S = R ; S[8,] <- Spw
v = R; v[,]=0
N = array(0,dim=c(ny,4,ns))
Ntot = R; Ntot[,]=0
H = Ntot; S = Ntot
predR = Ntot
v[7,] <- Rec[1]
N[4:7,1,]=R[4:7-(3),] * mat[1]
N[5:7,2,]=R[5:7-(4),] * mat[2]
N[6:7,3,]=R[6:7-(5),] * mat[3]
N[7,4,]=R[7-(6),] * mat[4]
# Loop through years of simulation
for(i in (7+1):ny){
N[i,1,] = R[i-(4),] * mat[1]
N[i,2,] = R[i-(5),] * mat[2]
N[i,3,] = R[i-(6),] * mat[3]
N[i,4,] = R[i-(7),] * mat[4]
Ntot[i,] = sum(N[i,,])
# apply harvest
outcome_error <- (1+rnorm(1,0,OU))
H[i,] =  U*Ntot[i,]*ifelse(outcome_error<0, 0, outcome_error)
S_exp = Ntot[i,]-H[i,]
S_exp[S_exp<0] = 0
S_exp[S_exp<50] = 0
S[i,] = S_exp
# predict recruitment
if (SR_rel == "Ricker"){
R[i,] = alpha[]*S[i,]*exp(-beta[]*S[i,]+phi*v[i-1,]+epi[i])
predR[i,] = alpha[]*S[i,]*exp(-beta[]*S[i,])
v[i,] = log(R[i,])-log(predR[i,])
v[v[,]=='NaN'] <- 0
}
if (SR_rel == "Beverton-Holt"){
R[i,] = alpha.time[i,]*S[i,]/(1+(alpha.time[i,]/beta.tim[])*S[i,])*exp(phi*v[i-1,]+epi[i])
predR[i,] = alpha.time[i,]*S[i,]/(1+(alpha.time[i,]/beta.tim[])*S[i,])
v[i,] = log(R[i,])-log(predR[i,])
v[v[,]=='NaN'] <- 0
}
}
S[S[,]=='NaN'] <- 0
Ntot[Ntot[,]=='NaN'] <- 0
list(S=S[,],R=R[,], N=Ntot[,],H=H[,])
}
ricker_para_dev <- array(NA,dim=c(2,21,21,100))
period <- seq(1,21)
alpha.scalar <- seq(0.2,2,length.out=21)
BH.alpha.CV <- seq(0,1,length.out=21)
for(k in 1:21){
for(j in 1:21){
for(i in 1:100){
bh_sim <- sr_sim(ny = 50,
phi = 0,
rec_sd = 0.5,
mat = c(0.1, 0.4, 0.4, 0.1),
alpha = exp(ricker_a),
beta = (ricker_b * -1),
U = 0.4,
OU = 0.1,
Spw = ricker_a/(ricker_b*-1),
Rec = rep(ricker_a/(ricker_b*-1),8),
SR_rel = "Beverton-Holt",
BH.alpha.CV = 0.4,
period = period[k],
alpha.scalar = period[j])
spawners <- bh_sim$S[10:50]
recruits <- bh_sim$R[10:50]
ricker_fit <- lm(log(recruits/spawners)~spawners)
ricker_para_dev[1, k, j] <- ricker_fit$coefficients[1]/ricker_a
ricker_para_dev[2, k, j] <- ricker_fit$coefficients[2]/ricker_b
}
}
}
ricker_para_dev <- array(NA,dim=c(2,21,21,100))
period <- seq(1,21)
alpha.scalar <- seq(0.2,2,length.out=21)
BH.alpha.CV <- seq(0,1,length.out=21)
for(k in 1:21){
for(j in 1:21){
for(i in 1:100){
bh_sim <- sr_sim(ny = 50,
phi = 0,
rec_sd = 0.5,
mat = c(0.1, 0.4, 0.4, 0.1),
alpha = exp(ricker_a),
beta = (ricker_b * -1),
U = 0.4,
OU = 0.1,
Spw = ricker_a/(ricker_b*-1),
Rec = rep(ricker_a/(ricker_b*-1),8),
SR_rel = "Beverton-Holt",
BH.alpha.CV = 0.4,
period = period[k],
alpha.scalar = period[j])
spawners <- bh_sim$S[10:50]
recruits <- bh_sim$R[10:50]
ricker_fit <- lm(log(recruits/spawners)~spawners)
ricker_para_dev[1, k, j, i] <- ricker_fit$coefficients[1]/ricker_a
ricker_para_dev[2, k, j, i] <- ricker_fit$coefficients[2]/ricker_b
}
}
}
apply(ricker_para_dev,c(1,2,3),quantile,probs=c(0.5),na.rm=T)
xx <- apply(ricker_para_dev,c(1,2,3),quantile,probs=c(0.5),na.rm=T)
xx[1,,]
xx[2,,]
ricker_para_dev <- array(NA,dim=c(2,21,21,100))
period <- seq(1,21)
alpha.scalar <- seq(0.2,2,length.out=21)
BH.alpha.CV <- seq(0,1,length.out=21)
for(k in 1:21){
for(j in 1:21){
for(i in 1:100){
bh_sim <- sr_sim(ny = 50,
phi = 0,
rec_sd = 0.5,
mat = c(0.1, 0.4, 0.4, 0.1),
alpha = exp(ricker_a),
beta = (ricker_b * -1),
U = 0.4,
OU = 0.1,
Spw = ricker_a/(ricker_b*-1),
Rec = rep(ricker_a/(ricker_b*-1),8),
SR_rel = "Beverton-Holt",
BH.alpha.CV = 0.4,
period = period[k],
alpha.scalar = alpha.scalar[j])
spawners <- bh_sim$S[10:50]
recruits <- bh_sim$R[10:50]
ricker_fit <- lm(log(recruits/spawners)~spawners)
ricker_para_dev[1, k, j, i] <- ricker_fit$coefficients[1]/ricker_a
ricker_para_dev[2, k, j, i] <- ricker_fit$coefficients[2]/ricker_b
}
}
}
xx <- apply(ricker_para_dev,c(1,2,3),quantile,probs=c(0.5),na.rm=T)
xx[2,,]
ricker_para_dev <- array(NA,dim=c(2,10,10,10,100))
period <- seq(1,10)
alpha.scalar <- seq(0.2,2,length.out=10)
BH.alpha.CV <- seq(0,1,length.out=10)
for(w in 1:10){
for(k in 1:10){
for(j in 1:10){
for(i in 1:100){
bh_sim <- sr_sim(ny = 50,
phi = 0,
rec_sd = 0.5,
mat = c(0.1, 0.4, 0.4, 0.1),
alpha = exp(ricker_a),
beta = (ricker_b * -1),
U = 0.4,
OU = 0.1,
Spw = ricker_a/(ricker_b*-1),
Rec = rep(ricker_a/(ricker_b*-1),8),
SR_rel = "Beverton-Holt",
BH.alpha.CV = 0.4,
period = period[k],
alpha.scalar = alpha.scalar[j])
spawners <- bh_sim$S[10:50]
recruits <- bh_sim$R[10:50]
ricker_fit <- lm(log(recruits/spawners)~spawners)
ricker_para_dev[1, k, j, w, i] <- ricker_fit$coefficients[1]/ricker_a
ricker_para_dev[2, k, j, w, i] <- ricker_fit$coefficients[2]/ricker_b
}
}
}
}
xx <- apply(ricker_para_dev,c(1,2,3,4),quantile,probs=c(0.5),na.rm=T)
xx[2,,,5]
ricker_para_dev <- array(NA,dim=c(2,10,10,10,100))
period <- seq(1,10)
alpha.scalar <- seq(0.2,2,length.out=10)
BH.alpha.CV <- seq(0,1,length.out=10)
for(w in 1:10){
for(k in 1:10){
for(j in 1:10){
for(i in 1:100){
bh_sim <- sr_sim(ny = 50,
phi = 0,
rec_sd = 0.5,
mat = c(0.1, 0.4, 0.4, 0.1),
alpha = exp(ricker_a),
beta = (ricker_b * -1),
U = 0.4,
OU = 0.1,
Spw = ricker_a/(ricker_b*-1),
Rec = rep(ricker_a/(ricker_b*-1),8),
SR_rel = "Beverton-Holt",
BH.alpha.CV = BH.alpha.CV[w],
period = period[k],
alpha.scalar = alpha.scalar[j])
spawners <- bh_sim$S[10:50]
recruits <- bh_sim$R[10:50]
ricker_fit <- lm(log(recruits/spawners)~spawners)
ricker_para_dev[1, k, j, w, i] <- ricker_fit$coefficients[1]/ricker_a
ricker_para_dev[2, k, j, w, i] <- ricker_fit$coefficients[2]/ricker_b
}
}
}
}
j
k
w
xx <- apply(ricker_para_dev,c(1,2,3,4),quantile,probs=c(0.5),na.rm=T)
xx[2,,,5]
xx[2,,,1]
xx[2,,,10]
xx[2,,,9]
ricker_para_dev <- array(NA,dim=c(2,10,10,10,1000))
period <- seq(1,10)
alpha.scalar <- seq(0.2,2,length.out=10)
BH.alpha.CV <- seq(0,0.8,length.out=10)
for(w in 1:10){
for(k in 1:10){
for(j in 1:10){
for(i in 1:1000){
bh_sim <- sr_sim(ny = 50,
phi = 0,
rec_sd = 0.5,
mat = c(0.1, 0.4, 0.4, 0.1),
alpha = exp(ricker_a),
beta = (ricker_b * -1),
U = 0.4,
OU = 0.1,
Spw = ricker_a/(ricker_b*-1),
Rec = rep(ricker_a/(ricker_b*-1),8),
SR_rel = "Beverton-Holt",
BH.alpha.CV = BH.alpha.CV[w],
period = period[k],
alpha.scalar = alpha.scalar[j])
spawners <- bh_sim$S[10:50]
recruits <- bh_sim$R[10:50]
ricker_fit <- lm(log(recruits/spawners)~spawners)
ricker_para_dev[1, k, j, w, i] <- ricker_fit$coefficients[1]/ricker_a
ricker_para_dev[2, k, j, w, i] <- ricker_fit$coefficients[2]/ricker_b
}
}
}
}
xx <- apply(ricker_para_dev,c(1,2,3,4),quantile,probs=c(0.5),na.rm=T)
xx[2,,,9]
which.min(abs(xx-1))
xx[2,,,5]
xx[2,,,8]
xx[2,,,7]
xx[2,,,6]
xx[2,,,5]
xx[2,,,4]
xx[2,,,6]
xx[2,,,7]
period[5]
alpha.scalar[5]
BH.alpha.CV[7]
xx[2,,,8]
